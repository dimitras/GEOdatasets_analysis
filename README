COX expression analysis

All experiments retrieved from GEO were carried out under the same conditions. The conditions would include how the samples were treated as well as the platform and protocol used to perform the microarray.

### PART 1 ###

Retrieve GEO datasets to check the variability of expression of a key genes list for the COX pathway.

- Links for studies in GEO:
http://www.ncbi.nlm.nih.gov/sites/GDSbrowser?acc=GDS2106
http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE1485
http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE5859
http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE10824
- An R source commands-set for parsing GSE_family.soft files and creating a custom csv table with a 'GSM-expression values' set per probe. 
- Used the GEOquery lib written in R (http://www2.warwick.ac.uk/fac/sci/moac/people/students/peter_cock/r/geo). 
- Embodied script to run R source by command line (without having to get in the R environment) by passing through arguments.


### PART 2 ###

Find the COX pathway genes through the datasets (GSE as source files).

- Parse GSM tables with ruby script to find and count the existence of COX pathway genes. 
- Export these genes with their expression values for all samples.
- Barplot in R, the average expression and standard error per experiment and by gene (pending).


### PART 3 ###

Retrieve the respective CEL files for GEO datasets from GEO to process and RMA normalize the Affy CEL files.

- Run Princeton's script for all experiments and get the PCL files in format: Entrezid_at, expression values for all samples.
(https://bitbucket.org/FunctionLab/arrayprocess/src/7ac17f671ac91381527ad97de377a7c0c4be6a9a/ProcessToPCL.R?at=default)
- Use the hgfocus chip lib from brain: http://brainarray.mbni.med.umich.edu/Brainarray/Database/CustomCDF/16.0.0/entrezg.asp


### PART 4 ###

Find the COX pathway genes through the datasets, in PCLs (same datasets but using CEL files as source, as mentioned in step 3).

- The probe-ids-like in the PCLs are the entrez ids with the probe_id suffix "at".
- R script to locate the COX genes among the csv datasets (PCL files converted to csv first).
- Barplot in R, the average expression and standard error per experiment and by gene (pending). Note that the x axis in the plots are the genes (entrez ids).


### PART 5 ###

Check if the GSM ids (samples) are the same through the experiments (used the GSM tables created in step 2)

- R script to get the uniques through the experiments, export a table with all the relations (https://upenn.box.com/s/zormz8yo5tgbkftru4aj)


### PART 6 ###

Retrieve genetic data from hapmap by correil id.

- Link the GM ids (GEO sample ids) with the coriell ids (Hapmap sample ids) with ruby script.
- Samples: ftp://ftp.ncbi.nlm.nih.gov/hapmap/samples_individuals/
- Genotypes: http://hapmap.ncbi.nlm.nih.gov/downloads/genotypes/
- Retrieve the respective genotypes for these coriell ids from hapmap. Use plink format (http://hapmap.ncbi.nlm.nih.gov/downloads/genotypes/hapmap3_r3/plink_format/) to search within. In case of using hapmap format, parse all chromosomes in the consensus for each sample set (CEU, JPT, YRI, CHB) and also cross validate with the inconsistencies.
- filter the genetic data with 1) 5% variance, 2) only parents.
- specify in genome 100KB +- from  transcription start site (not sure what this is yet).


### PART 7 ###

Genetics analysis for COX expression.

- Analysis with Genetic Power Calculator.
- Whole genome association analysis plink toolset.




